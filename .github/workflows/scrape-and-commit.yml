name: Scrape and Commit CSV

on:
  schedule:
    # Regular schedule: every 2 hours, except during release times on Tuesdays/Thursdays
    - cron: '0 */2 * * 0,1,3,5,6' # Every 2 hours on Sun, Mon, Wed, Fri, Sat (non-release days)
    - cron: '0 */2 * * 2,4'       # Every 2 hours on Tue, Thu (includes 16:00 UTC = 9:00 AM PT in PDT)
    # Release-specific runs on Tuesdays and Thursdays (PDT, UTC-7)
    - cron: '2 16 * * 2,4'        # 9:02 AM PT (16:02 UTC) on Tue, Thu
    - cron: '5 16 * * 2,4'        # 9:05 AM PT (16:05 UTC) on Tue, Thu
    - cron: '10 16 * * 2,4'       # 9:10 AM PT (16:10 UTC) on Tue, Thu
    - cron: '30 16 * * 2,4'       # 9:30 AM PT (16:30 UTC) on Tue, Thu
  workflow_dispatch: # Дозволяє запускати вручну через GitHub UI
  push:
    branches:
      - main # Запуск при пуші в гілку main

jobs:
  scrape-and-commit:
    runs-on: ubuntu-latest

    steps:
      # Крок 1: Клонуємо репозиторій
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Отримуємо повну історію, щоб уникнути проблем із гітом

      # Крок 2: Оновлюємо репозиторій до останньої версії
      - name: Pull latest changes
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git pull --rebase origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Крок 3: Налаштування Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Використовуємо Python 3.10 (можете змінити версію)

      # Крок 4: Встановлення залежностей із requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Крок 5: Запуск скрипта api_parser.py
      - name: Run scrape script
        run: python api_parser.py

      # Крок 6: Перевірка вмісту директорії
      - name: List directory contents
        run: ls -la

      # Крок 7: Виведення вмісту output.csv (якщо файл існує)
      - name: Show output.csv contents
        run: |
          if [ -f output.csv ]; then
            echo "Вміст output.csv:"
            cat output.csv
          else
            echo "Файл output.csv не знайдено"
          fi

      # Крок 8: Перевірка статусу Git перед комітом
      - name: Check Git status
        run: |
          git status

      # Крок 9: Коміт і пуш змін у output.csv (без перевірки змін)
      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git add output.csv
          git commit -m "Update output.csv with latest scrape data" || echo "No changes to commit"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}